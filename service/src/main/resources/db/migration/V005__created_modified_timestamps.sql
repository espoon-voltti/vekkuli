ALTER TABLE boat
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE boat_space
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE citizen
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE email_template
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE organization
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE organization_member
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL;

ALTER TABLE price
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE trailer
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

ALTER TABLE variable
    ADD COLUMN created TIMESTAMP WITH TIME ZONE DEFAULT CURRENT_TIMESTAMP NOT NULL,
    ADD COLUMN updated TIMESTAMP DEFAULT CURRENT_TIMESTAMP;

CREATE OR REPLACE FUNCTION update_modified_column()
    RETURNS TRIGGER AS $$
BEGIN
    NEW.updated = CURRENT_TIMESTAMP;
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON boat
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON boat_space
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON citizen
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON email_template
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON organization
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON organization_member
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON price
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON trailer
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();

CREATE TRIGGER set_timestamp
    BEFORE UPDATE ON variable
    FOR EACH ROW
EXECUTE FUNCTION update_modified_column();
